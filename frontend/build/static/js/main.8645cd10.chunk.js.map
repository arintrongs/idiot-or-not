{"version":3,"sources":["utils/fetchData.jsx","pages/HomePage/components/Problem.jsx","pages/HomePage/components/Leaderboard.jsx","pages/HomePage/HomePage.jsx","App.js","serviceWorker.js","index.js"],"names":["useFetch","path","useState","data","setData","loading","setLoading","a","axios","get","response","console","log","JSON","parse","useEffect","fetchUrl","Option","Select","PriceInput","props","handleUser","user","setState","target","value","triggerChange","handleCurrencyChange2","currency2","idx","tmp","i","state","length","push","op","changedValue","onChange","num","ans","nextProps","prevProps","this","size","style","display","map","val","flex","width","textAlign","e","justifyContent","marginLeft","React","Component","Demo","handleSubmit","isSubmitted","clearInterval","interval","preventDefault","form","validateFields","err","values","Calculator","post","uid","result","res","renderResponse","padding","fontSize","color","paddingBottom","started","time","setInterval","newTime","document","getElementById","click","getFieldDecorator","Fragment","layout","onSubmit","Item","label","initialValue","id","type","htmlType","disabled","className","justify","margin","onClick","Form","create","name","Leaderboard","score","dataLeaderboard","fetch","columns","title","dataIndex","key","render","text","dataSource","HomePage","dataQuestion","Problem","App","Boolean","window","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8645cd10.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst useFetch = (path) => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  async function fetchUrl() {\n    const response = await axios.get(path);\n    console.log(response)\n    setData(JSON.parse(response.data));\n    setLoading(false);\n  }\n  useEffect(() => {\n    fetchUrl();\n  }, []);\n  return [data, loading];\n}\n\nexport { useFetch };","import React from 'react';\nimport { Form, Select, Button, Input } from 'antd';\nimport axios from 'axios';\n\nconst { Option } = Select;\n\n\nclass PriceInput extends React.Component {\n\n  static getDerivedStateFromProps(nextProps) {\n    // Should be a controlled component.\n    if ('value' in nextProps) {\n      return {\n        ...(nextProps.value || {}),\n      };\n    }\n    return null;\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: this.props.num,\n      op: ['+', '+', '+', '+', '+', '+', '+', '+', '+', '+'],\n      user: '',\n      ans: this.props.ans,\n    };\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.num !== this.props.num) {\n      this.setState({ data: this.props.num });\n    }\n    if (prevProps.ans !== this.props.ans) {\n      this.setState({ ans: this.props.ans });\n    }\n  }\n\n  handleUser = user => {\n    if (!('value' in this.props)) {\n      this.setState({ user: user.target.value });\n    }\n    this.triggerChange({ user: user.target.value });\n  };\n\n  handleCurrencyChange2 = (currency2, idx) => {\n    var tmp = []\n    for (var i = 0; i < this.state.data.length; i += 1) {\n      if (idx === i) {\n        tmp.push(currency2)\n      }\n      else {\n        tmp.push(this.state.op[i])\n      }\n    }\n    this.setState({ op: tmp });\n    this.triggerChange({ op: tmp });\n  };\n\n  triggerChange = changedValue => {\n    // Should provide an event to pass value to Form.\n    const { onChange } = this.props;\n    if (onChange) {\n      onChange({\n        ...this.state,\n        ...changedValue,\n      });\n    }\n  };\n\n  render() {\n    const { size } = this.props;\n    const { data, op, user } = this.state;\n    console.log('heee ', this.state)\n    console.log('From Form', this.props.num, this.props.ans);\n\n    return <div style={{ display: 'flex', 'flexDirection': 'row' }}>\n      {data.map((val, idx) => {\n        if (idx + 1 == data.length) {\n          return null;\n        }\n        return (\n          <div style={{ display: 'flex', flex: 3 }}>\n            <div style={{ width: '40%', display: 'inline-block', textAlign: 'center' }}> {val} </div>\n\n            <Select\n              value={op[idx]}\n              size={'large'}\n              style={{ width: '60%', display: 'inline-block' }}\n              onChange={(e) => this.handleCurrencyChange2(e, idx)}\n            >\n              <Option value=\"+\">+</Option>\n              <Option value=\"-\">-</Option>\n              <Option value=\"*\">*</Option>\n              <Option value=\"/\">/</Option>\n              <Option value=\"^\">^</Option>\n            </Select> </div>\n        )\n      })}\n      <div style={{ display: 'flex', flex: 1.2, justifyContent: 'center' }}> {data[data.length - 1]} </div>\n      <div style={{ display: 'flex', flex: 1, justifyContent: 'center' }}> = </div>\n      <div style={{ display: 'flex', flex: 1, justifyContent: 'center' }}> {this.props.ans} </div>\n      <div style={{ display: 'flex', flex: 3, justifyContent: 'center', marginLeft: '60px' }}>\n        <div style={{ width: '30%', display: 'inline-block' }}>user: </div>\n        <Input style={{ width: '70%' }} value={user} onChange={(e) => this.handleUser(e)} />\n      </div>\n    </div>\n  }\n}\n\nclass Demo extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      response: '',\n      started: false,\n      time: 30000000,\n      isSubmitted: false,\n      interval: setInterval(() => {\n        const newTime = this.state.time - 1;\n        if (newTime === 0) {\n          clearInterval(this.state.interval)\n          const btn = document.getElementById('summitBtn');\n          btn.click();\n          this.setState({ isSubmitted: true });\n        }\n        this.setState({ time: newTime });\n      }, 1000)\n    };\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.interval);\n  }\n\n  handleSubmit = e => {\n    this.setState({ isSubmitted: true })\n    clearInterval(this.state.interval)\n    e.preventDefault();\n\n    this.props.form.validateFields(async (err, values) => {\n      console.log('uiddddd', values.Calculator.user)\n      if (!err) {\n        const result = await axios.post('http://192.168.0.113:5000/submit', {\n          uid: values.Calculator.user || \"default\",\n          num: values.Calculator.data,\n          op: values.Calculator.op,\n          ans: values.Calculator.ans,\n        })\n        const res = JSON.parse(result.data);\n        console.log('result', result, res, res.result, res.result == false)\n        if (res.result == true) {\n          this.setState({ response: 'success' })\n        } else if (res.result == false) {\n          console.log('fail')\n          this.setState({ response: 'fail' })\n        } else {\n          console.log('mai ru')\n          this.setState({ response: '' })\n        }\n      }\n    });\n  };\n\n  renderResponse = (res) => {\n    if (!res || res === '') {\n      return ''\n    } else if (res == 'success') {\n      return (<div style={{ padding: '40px', fontSize: '48px', color: 'green', paddingBottom: '0px', textAlign: 'center', width: '100%' }}>\n        Correct!, you are not idiot\n    </div>)\n    }\n    return (<div style={{ padding: '40px', fontSize: '48px', color: 'red', paddingBottom: '0px', textAlign: 'center', width: '100%' }}>\n      Wrong answer, you idiot\n    </div>)\n  }\n\n  render() {\n    console.log('time', this.state.time)\n    const { getFieldDecorator } = this.props.form;\n    console.log('From Problem', this.props.num, this.props.ans);\n    return (\n      this.state.started ?\n        <React.Fragment>\n          <Form layout=\"inline\" onSubmit={this.handleSubmit}>\n            <Form.Item label=\"Calculator\" style={{ width: '80%', fontSize: '20px' }}>\n              {getFieldDecorator('Calculator', {\n                initialValue: { op: ['+', '+', '+', '+', '+', '+', '+', '+', '+', '+'], user: '' },\n              })(<PriceInput num={this.props.num} ans={this.props.ans} />)}\n            </Form.Item>\n            <Form.Item style={{ width: '100px' }}>\n              <Button id='summitBtn' type=\"primary\" htmlType=\"submit\" disabled={this.state.isSubmitted}>\n                Submit\n            </Button>\n            </Form.Item>\n          </Form>\n          <div className='time-out'>\n            <text className={this.state.time > 10 ? 'green' : 'red'}>\n              {this.state.time}{this.state.time > 10 ? '' : \" !!!\"}\n            </text>\n          </div>\n          {this.renderResponse(this.state.response)}\n        </React.Fragment>\n        :\n        <div style={{ width: '100%', display: 'flex', justify: 'center' }}> <Button type='success' style={{\n          textAlign: 'center',\n          margin: 'auto'\n        }} onClick={() => { this.setState({ started: true, time: 30 }) }}> Start! </Button></div>\n\n    );\n  }\n}\n\nexport default Form.create({ name: 'customized_form_controls' })(Demo);\n","import React from 'react';\nimport { Table, Divider, Tag } from 'antd';\nimport axios from 'axios'\n\nclass Leaderboard extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [{uid: 'eqsk134', score: 999999}],\n    };\n    \n    setInterval(async () => {\n      const response = await axios.get('http://192.168.0.113:5000/leaderboard');\n      const dataLeaderboard = JSON.parse(response.data || '')\n      this.setState({ data: dataLeaderboard.data});\n      console.log('after set',dataLeaderboard.data)\n    }, 10000);\n  }\n  async fetch() {\n    const response = await axios.get('http://192.168.0.113:5000/leaderboard');\n    const dataLeaderboard = JSON.parse(response.data || '')\n    this.setState({ data: dataLeaderboard.data});\n  }\n\n  componentWillMount() {\n    this.fetch()\n  }\n  \n  render() {\n\n    const columns = [\n      {\n        title: 'Username',\n        dataIndex: 'uid',\n        key: 'uid',\n        render: text => <b>{text}</b>,\n      },\n      {\n        title: 'Score',\n        dataIndex: 'score',\n        key: 'score',\n      },\n    ];\n\n    return (\n      <div style={{padding: '40px', marginLeft: '60px'}}> \n      <div style={{fontSize: '36px'}}>Leaderboard </div>\n      <Table columns={columns} dataSource={this.state.data} />\n      \n        {/* {this.props.data.map((val,idx)=>{\n      return(\n        <div style={{padding: '20px', fontSize: '20px'}}> {val.uid}: {val.score} </div>\n      ) \n    })} */}\n      </div>\n      \n    )\n  }\n}\n\nexport default Leaderboard;","import React from 'react';\nimport { useFetch } from '../../utils/fetchData';\nimport Problem from './components/Problem';\nimport Leaderboard from './components/Leaderboard'\n\nimport './HomePage.scss'\n\nconst HomePage = () => {\n\t// const [leader, setLeader] = useState({data: [{uid: 'eqsk134', score: 999999}]});\n\t// let [dataLeaderboard, loadingLeaderboard] = useFetch('http://192.168.0.113:5000/leaderboard');\n\tconst [dataQuestion, loadingQuestion] = useFetch('http://192.168.0.113:5000/question');\n\t// const { num, ans } = dataQuestion\n\t// const { data } = dataLeaderboard\n\tconsole.log(dataQuestion)\n\tconst num = dataQuestion.num || [4, 5, 9, 1];\n\tconst ans = dataQuestion.ans || 7;\n\n\treturn (\n\t\t<div>\n\t\t\t<Problem num={dataQuestion.num || [4, 5, 9, 1]} ans={dataQuestion.ans || 7}/>\n\t\t\t<Leaderboard />\n\t\t</div>  \n\t);\n}\n\nexport default HomePage;","import './App.css';\nimport './global.scss';\nimport React from 'react';\nimport HomePage from './pages/HomePage/HomePage';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <HomePage />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}